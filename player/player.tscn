[gd_scene load_steps=38 format=3 uid="uid://b0yffrvg6bhei"]

[ext_resource type="Texture2D" uid="uid://cvhvvebcqgj2q" path="res://player/animations/drill_player.png" id="2_swxeq"]
[ext_resource type="Texture2D" uid="uid://csvq22fgo1biu" path="res://player/animations/idle/idle_player_front.png" id="2_v4wss"]
[ext_resource type="Texture2D" uid="uid://b0xi5e77y1b4l" path="res://player/animations/run/run_player_back.png" id="3_y8wvg"]
[ext_resource type="Texture2D" uid="uid://dddiue5wpwr2b" path="res://player/animations/run/run_player_front.png" id="4_2c8w4"]
[ext_resource type="Texture2D" uid="uid://bkuecchfsf6eb" path="res://player/animations/run/run_player_side.png" id="5_knscy"]
[ext_resource type="Texture2D" uid="uid://d37hu5p5p5de5" path="res://player/animations/saw_player.png" id="7_xwfgo"]
[ext_resource type="PackedScene" uid="uid://2i61lrgluqhs" path="res://ui/player_menu/player_menu.tscn" id="8_h42pe"]

[sub_resource type="GDScript" id="GDScript_6epvl"]
script/source = "class_name Player extends CharacterBody2D

const SPEED = 100.0

enum State { Idle, Run, Saw, Drill }
enum InputType { BuildMenu, StructureMenu, StructureSpecialMenu, Map, DeleteMode, Escape, None }

@onready var player_menu: PlayerMenu = $PlayerMenu
@onready var inventory: Inventory = player_menu.get_inventory()
@onready var animated_sprite_2d = $AnimatedSprite2D
@onready var collision_shape_2d = $CollisionShape2D
@onready var current_state = State.Idle
@onready var camera_2d: Camera2D = $Camera2D

var map_active: bool = false
var is_mining: bool = false
var minable_structure: NaturalStructure
var pos_before_mine: Vector2
var direction := Vector2i(0, 1)

var has_menu_open := false
var is_placing_structure := false
var is_deleting_structure := false
var is_placing_wire := false
var is_dragging_stack := false


func is_busy() -> bool:
	return has_menu_open \\
		or is_placing_structure \\
		or is_placing_wire \\
		or is_mining \\
		or is_dragging_stack \\
		or map_active

func _ready():
	pass

		
func _process(delta):
	player_input()


## Manages player input such as opening the build menu or map.
func player_input():
	if Input.is_action_just_pressed(\"build_menu\"):
		SignalManager.player_input.emit(InputType.BuildMenu)
		escape()
		player_menu.visible = not player_menu.visible
	elif Input.is_action_just_pressed(\"map\"):
		SignalManager.player_input.emit(InputType.Map)
		if not map_active:
			escape()
			map_active = true
			camera_2d.zoom *= Vector2(0.1, 0.1)	
		else:
			escape()
	elif Input.is_action_just_pressed(\"delete\"):
		SignalManager.player_input.emit(InputType.DeleteMode)
		if not is_deleting_structure:
			escape()
			is_deleting_structure = true
			Input.set_custom_mouse_cursor(preload(\"res://ui/cursor/shovel.png\"))
		else:
			escape()
	elif Input.is_action_just_pressed(\"escape\"):
		SignalManager.player_input.emit(InputType.Escape)
		escape()


func escape():
	current_state = State.Idle
		
	if is_mining:
		collision_shape_2d.disabled = false
		minable_structure.end_player_mining()
		global_position = pos_before_mine
		is_mining = false
	
	if map_active:
		camera_2d.zoom = Vector2.ONE
		map_active = false
	
	is_deleting_structure = false
	Input.set_custom_mouse_cursor(null)


func _physics_process(delta):
	player_idle()
	player_run()
	move_and_slide()
	player_animations()


## Sets the player in an idle state.
func player_idle():
	if current_state != State.Saw and current_state != State.Drill:
		current_state = State.Idle


## Controls player movement.
func player_run():
	if is_mining:
		return
	
	var x_direction := Input.get_axis(\"move_left\", \"move_right\")
	var y_direction := Input.get_axis(\"move_up\", \"move_down\")
	
	if x_direction or y_direction:
		escape()
	
	if x_direction:
		velocity.x = x_direction * SPEED
		current_state = State.Run
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		
	if y_direction:
		velocity.y = y_direction * SPEED
		current_state = State.Run
	else:
		velocity.y = move_toward(velocity.y, 0, SPEED)
	
	if abs(velocity.x) > abs(velocity.y):
		direction = Vector2i(sign(velocity.x), 0)
		animated_sprite_2d.flip_h = sign(velocity.x) == -1
	else:
		direction = Vector2i(0, sign(velocity.y))
		animated_sprite_2d.flip_h = false


## Manages player animations.
func player_animations():
	match current_state:
		State.Idle:
			animated_sprite_2d.play(\"idle\")
		State.Run:
			match direction:
				Vector2i(0, 1):
					animated_sprite_2d.play(\"run_front\")
				Vector2i(0, -1):
					animated_sprite_2d.play(\"run_back\")
				_:
					animated_sprite_2d.play(\"run_side\")
		State.Saw:
			animated_sprite_2d.play(\"saw\")
		State.Drill:
			animated_sprite_2d.play(\"drill\")


func _mine(target: NaturalStructure, state: State):
	escape()
	
	current_state = state
	is_mining = true
	minable_structure = target
	collision_shape_2d.disabled = true
	pos_before_mine = global_position
	global_position = target.get_player_position()
	target.begin_player_mining()
	
func saw(target: NaturalStructure):
	_mine(target, State.Saw)

func drill(target: NaturalStructure):
	_mine(target, State.Drill)

func has_material_in_inventory(material_id: int, amount: int = 1) -> bool:
	return inventory.contains_material(material_id, amount)

func pay_for_structure(cost: Array):
	for val in cost:
		var material_id = val[0]
		var amount = val[1]
		inventory.remove_material(material_id, amount)

func set_menu_delayed(value: bool):
	Clock.invoke(0.1, func(): has_menu_open = value)

func set_placing_wire_delayed(value: bool):
	Clock.invoke(0.1, func(): is_placing_wire = value)
"

[sub_resource type="AtlasTexture" id="AtlasTexture_5qd6l"]
atlas = ExtResource("2_swxeq")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7hthv"]
atlas = ExtResource("2_swxeq")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7rmh3"]
atlas = ExtResource("2_swxeq")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qujfd"]
atlas = ExtResource("2_swxeq")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_hrqcf"]
atlas = ExtResource("2_swxeq")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_pjawj"]
atlas = ExtResource("2_swxeq")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_kncaw"]
atlas = ExtResource("2_swxeq")
region = Rect2(192, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_r6uyv"]
atlas = ExtResource("2_swxeq")
region = Rect2(224, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_10k4k"]
atlas = ExtResource("2_swxeq")
region = Rect2(256, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_guy75"]
atlas = ExtResource("2_v4wss")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_nsbv8"]
atlas = ExtResource("2_v4wss")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_q0hro"]
atlas = ExtResource("3_y8wvg")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7dabj"]
atlas = ExtResource("3_y8wvg")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_4im41"]
atlas = ExtResource("4_2c8w4")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_n5m43"]
atlas = ExtResource("4_2c8w4")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_n5802"]
atlas = ExtResource("5_knscy")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_23vvm"]
atlas = ExtResource("5_knscy")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_1bfn5"]
atlas = ExtResource("5_knscy")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_5cwpb"]
atlas = ExtResource("5_knscy")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_xbmob"]
atlas = ExtResource("7_xwfgo")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_jf1t0"]
atlas = ExtResource("7_xwfgo")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qyl1m"]
atlas = ExtResource("7_xwfgo")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_o1wt8"]
atlas = ExtResource("7_xwfgo")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_nj1tb"]
atlas = ExtResource("7_xwfgo")
region = Rect2(128, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_1pxv7"]
atlas = ExtResource("7_xwfgo")
region = Rect2(160, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_bu5y0"]
atlas = ExtResource("7_xwfgo")
region = Rect2(192, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_h3ngp"]
atlas = ExtResource("7_xwfgo")
region = Rect2(224, 0, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_lvmtr"]
animations = [{
"frames": [],
"loop": true,
"name": &"default",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5qd6l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7hthv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7rmh3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qujfd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hrqcf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pjawj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kncaw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_r6uyv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_10k4k")
}],
"loop": true,
"name": &"drill",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_guy75")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nsbv8")
}],
"loop": true,
"name": &"idle",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_q0hro")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7dabj")
}],
"loop": true,
"name": &"run_back",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4im41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_n5m43")
}],
"loop": true,
"name": &"run_front",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_n5802")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_23vvm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1bfn5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5cwpb")
}],
"loop": true,
"name": &"run_side",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_xbmob")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jf1t0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qyl1m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_o1wt8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nj1tb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1pxv7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bu5y0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h3ngp")
}],
"loop": true,
"name": &"saw",
"speed": 10.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_bhxj1"]
size = Vector2(10, 24)

[node name="Player" type="CharacterBody2D"]
collision_mask = 35
script = SubResource("GDScript_6epvl")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
z_index = 1
position = Vector2(0, -16)
sprite_frames = SubResource("SpriteFrames_lvmtr")
animation = &"drill"
autoplay = "idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -12)
shape = SubResource("RectangleShape2D_bhxj1")

[node name="Camera2D" type="Camera2D" parent="."]

[node name="PlayerMenu" parent="." instance=ExtResource("8_h42pe")]
visible = false
